{
  "operations": [
    {
      "name": "getGroup",
      "params": [
        "registrant_id",
        "callback"
      ],
      "docs": {
        "description": "get group information from OpenSPP",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "getGroup(\"GRP_Q4VGGZPF\")"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "The registrant_id of the group",
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "registrant_id"
          },
          {
            "title": "param",
            "description": "An optional callback function",
            "type": {
              "type": "NameExpression",
              "name": "function"
            },
            "name": "callback"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "getIndividual",
      "params": [
        "registrant_id",
        "callback"
      ],
      "docs": {
        "description": "get individual information from OpenSPP",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "getIndividual(\"IND_Q4VGGZPF\")"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "The registrant_id of the individual",
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "registrant_id"
          },
          {
            "title": "param",
            "description": "An optional callback function",
            "type": {
              "type": "NameExpression",
              "name": "function"
            },
            "name": "callback"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "getGroupMembers",
      "params": [
        "registrant_id",
        "offset",
        "callback"
      ],
      "docs": {
        "description": "get group members information from OpenSPP",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "getGroupMembers(\"GRP_Q4VGGZPF\")"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "The name of the group",
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "registrant_id"
          },
          {
            "title": "param",
            "description": "Offset searching",
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            "name": "offset",
            "default": "0"
          },
          {
            "title": "param",
            "description": "An optional callback function",
            "type": {
              "type": "NameExpression",
              "name": "function"
            },
            "name": "callback"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "getServicePoint",
      "params": [
        "name",
        "offset",
        "callback"
      ],
      "docs": {
        "description": "get service points information from OpenSPP",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "getServicePoint(\"000117\")"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "The number of the agent",
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "name"
          },
          {
            "title": "param",
            "description": "Offset searching",
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            "name": "offset",
            "default": "0"
          },
          {
            "title": "param",
            "description": "An optional callback function",
            "type": {
              "type": "NameExpression",
              "name": "function"
            },
            "name": "callback"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "searchGroup",
      "params": [
        "domain",
        "offset",
        "callback"
      ],
      "docs": {
        "description": "get groups from OpenSPP",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "searchGroup([[\"registrant_id\", \"=\", \"GRP_Q4VGGZPF\"]])"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "searching domain",
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "domain"
          },
          {
            "title": "param",
            "description": "Offset searching",
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            "name": "offset",
            "default": "0"
          },
          {
            "title": "param",
            "description": "An optional callback function",
            "type": {
              "type": "NameExpression",
              "name": "function"
            },
            "name": "callback"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "searchIndividual",
      "params": [
        "domain",
        "offset",
        "callback"
      ],
      "docs": {
        "description": "get individuals from OpenSPP",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "searchIndividual([[\"registrant_id\", \"=\", \"IND_Q4VGGZPF\"]])"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "searching domain",
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "domain"
          },
          {
            "title": "param",
            "description": "Offset searching",
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            "name": "offset",
            "default": "0"
          },
          {
            "title": "param",
            "description": "An optional callback function",
            "type": {
              "type": "NameExpression",
              "name": "function"
            },
            "name": "callback"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "getProgram",
      "params": [
        "program_id",
        "callback"
      ],
      "docs": {
        "description": "get program information from OpenSPP",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "getProgram(\"PROG_2023_00000001\")"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "searching domain",
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "program_id"
          },
          {
            "title": "param",
            "description": "An optional callback function",
            "type": {
              "type": "NameExpression",
              "name": "function"
            },
            "name": "callback"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "getPrograms",
      "params": [
        "offset",
        "callback"
      ],
      "docs": {
        "description": "get programs list from OpenSPP",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "getPrograms(100)"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "offset from start",
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            "name": "offset",
            "default": "0"
          },
          {
            "title": "param",
            "description": "An optional callback function",
            "type": {
              "type": "NameExpression",
              "name": "function"
            },
            "name": "callback"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "getEnrolledPrograms",
      "params": [
        "registrant_id",
        "callback"
      ],
      "docs": {
        "description": "get programs list from OpenSPP",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "getEnrolledPrograms(\"IND_Q4VGGZPF\")"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "registrant_id of group / individual wanted to search",
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "registrant_id"
          },
          {
            "title": "param",
            "description": "An optional callback function",
            "type": {
              "type": "NameExpression",
              "name": "function"
            },
            "name": "callback"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "enroll",
      "params": [
        "registrant_id",
        "program_id",
        "callback"
      ],
      "docs": {
        "description": "enroll registrant to program from OpenSPP",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "enroll(\"IND_Q4VGGZPF\", \"PROG_2023_00000001\")"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "registrant_id of group / individual wanted to enroll",
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "registrant_id"
          },
          {
            "title": "param",
            "description": "program_id of program",
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "program_id"
          },
          {
            "title": "param",
            "description": "An optional callback function",
            "type": {
              "type": "NameExpression",
              "name": "function"
            },
            "name": "callback"
          }
        ]
      },
      "valid": true
    },
    {
      "name": "unenroll",
      "params": [
        "registrant_id",
        "program_id",
        "callback"
      ],
      "docs": {
        "description": "unenroll registrant from program from OpenSPP",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "unenroll(\"IND_Q4VGGZPF\", \"PROG_2023_00000001\")"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "registrant_id of group / individual wanted to unenroll",
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "registrant_id"
          },
          {
            "title": "param",
            "description": "program_id of program",
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "program_id"
          },
          {
            "title": "param",
            "description": "An optional callback function",
            "type": {
              "type": "NameExpression",
              "name": "function"
            },
            "name": "callback"
          }
        ]
      },
      "valid": true
    }
  ],
  "exports": [],
  "common": [
    {
      "name": "fn",
      "params": [
        "func"
      ],
      "docs": {
        "description": "Creates a custom step (or operation) for more flexible job writing.",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "fn(state => {\n  // do some things to state\n  return state;\n});"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "is the function",
            "type": {
              "type": "NameExpression",
              "name": "Function"
            },
            "name": "func"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "sourceValue",
      "params": [
        "path"
      ],
      "docs": {
        "description": "Picks out a single value from source data.\nIf a JSONPath returns more than one value for the reference, the first\nitem will be returned.",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "sourceValue('$.key')"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "JSONPath referencing a point in `state`.",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "name": "path"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "dataPath",
      "params": [
        "path"
      ],
      "docs": {
        "description": "Ensures a path points at the data.",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "dataPath('key')"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "JSONPath referencing a point in `data`.",
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "path"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "string"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "dataValue",
      "params": [
        "path"
      ],
      "docs": {
        "description": "Picks out a single value from the source data object—usually `state.data`.\nIf a JSONPath returns more than one value for the reference, the first\nitem will be returned.",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "dataValue('key')"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "JSONPath referencing a point in `data`.",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "name": "path"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "lastReferenceValue",
      "params": [
        "path"
      ],
      "docs": {
        "description": "Picks out the last reference value from source data.",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "lastReferenceValue('key')"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "JSONPath referencing a point in `references`.",
            "type": {
              "type": "NameExpression",
              "name": "String"
            },
            "name": "path"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "each",
      "params": [
        "dataSource",
        "operation"
      ],
      "docs": {
        "description": "Scopes an array of data based on a JSONPath.\nUseful when the source data has `n` items you would like to map to\nan operation.\nThe operation will receive a slice of the data based of each item\nof the JSONPath provided.\n\nIt also ensures the results of an operation make their way back into\nthe state's references.",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "each(\"$.[*]\",\n  create(\"SObject\",\n    field(\"FirstName\", sourceValue(\"$.firstName\"))\n  )\n)"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "JSONPath referencing a point in `state`.",
            "type": {
              "type": "NameExpression",
              "name": "DataSource"
            },
            "name": "dataSource"
          },
          {
            "title": "param",
            "description": "The operation needed to be repeated.",
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            },
            "name": "operation"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Operation"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "field",
      "params": [
        "key",
        "value"
      ],
      "docs": {
        "description": "Returns a key, value pair in an array.",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "field('destination_field_name__c', 'value')"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "Name of the field",
            "type": {
              "type": "NameExpression",
              "name": "string"
            },
            "name": "key"
          },
          {
            "title": "param",
            "description": "The value itself or a sourceable operation.",
            "type": {
              "type": "NameExpression",
              "name": "Value"
            },
            "name": "value"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Field"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "fields",
      "params": [
        "fields"
      ],
      "docs": {
        "description": "Zips key value pairs into an object.",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "fields(list_of_fields)"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": "a list of fields",
            "type": {
              "type": "NameExpression",
              "name": "Fields"
            },
            "name": "fields"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "Object"
            }
          }
        ]
      },
      "valid": true
    },
    {
      "name": "merge",
      "params": [
        "dataSource",
        "fields"
      ],
      "docs": {
        "description": "Merges fields into each item in an array.",
        "tags": [
          {
            "title": "public",
            "description": null,
            "type": null
          },
          {
            "title": "example",
            "description": "merge(\n  \"$.books[*]\",\n  fields(\n    field( \"publisher\", sourceValue(\"$.publisher\") )\n  )\n)"
          },
          {
            "title": "function",
            "description": null,
            "name": null
          },
          {
            "title": "param",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "DataSource"
            },
            "name": "dataSource"
          },
          {
            "title": "param",
            "description": "Group of fields to merge in.",
            "type": {
              "type": "NameExpression",
              "name": "Object"
            },
            "name": "fields"
          },
          {
            "title": "returns",
            "description": null,
            "type": {
              "type": "NameExpression",
              "name": "DataSource"
            }
          }
        ]
      },
      "valid": true
    }
  ]
}